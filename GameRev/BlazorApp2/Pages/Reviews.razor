@page "/reviews/gameId/{GameId}"
@inject IGamesService GamesService
@inject IReviewsService ReviewsService

<div class="card mt-4">
    <h4 class="card-header">Reviews</h4>
    <div class="card-body">
        <h6>Reviews from @game.Title</h6>
        @if (loading)
        {
            <div class="spinner-border spinner-border-sm"></div>
        }
        @if (reviews != null)
        {
            <ul>
                @foreach (var review in reviews)
                {
                    <tr>
                        <td>@review.Id</td>
                        <td>@review.Content</td>
                        <td>@review.Rate</td>
                        <td>
                            <a class="btn btn-primary" href='/reviews/edit/@review.Id'>Edit</a>  |
                            <a class="btn btn-danger" @onclick="() => DeleteReview(review.Id)">Delete</a>
                        </td>
                    </tr>
                }
            </ul>
        }
    </div>
</div>

@code {
    private bool loading;
    Review review = new Review();
    [Parameter]
    public string GameId { get; set; }

    private Game game = new Game();
    private IEnumerable<Review> reviews;


    protected override async Task OnInitializedAsync()
    {
        loading = true;
        game = await GamesService.GetById(Convert.ToInt32(GameId));
        reviews = await ReviewsService.GetByGameId(Convert.ToInt32(GameId));
        loading = false;
    }
    [Authorize]
    protected async Task DeleteReview(int id)
    {
        await ReviewsService.Delete(id);
        reviews = await ReviewsService.GetByGameId(Convert.ToInt32(GameId));
    }
}