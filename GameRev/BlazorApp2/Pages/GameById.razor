@page "/games/{Id}"
@inject IGamesService GamesService
@inject IGameUsersService GameUsersService
@inject IAuthenticationService AuthenticationService
@inject NavigationManager NavigationManager

<div class="card mt-4">
    <h4 class="card-header"></h4>
    <div class="card-body">
        @if (loading)
        {
            <div class="spinner-border spinner-border-sm"></div>
        }
        @if (game != null)
        {
            <ul>

                <tr>
                    <td>@game.Id</td>
                    <td>@game.Title</td>
                    <td>@game.Description</td>
                    <td>@game.ReleaseYear</td>
                    <td>
                        @if (@game.Genres != null)
                        {
                            @foreach (var genre in game.Genres)
                            {
                        <li>@Enum.Parse(typeof(Genre), genre.ToString())</li>
                            }
                        }
                </td>
                <td>
                    <a class="btn btn-primary" href='/reviews/gameId/@game.Id'>Show Reviews</a>

                        @if (AuthenticationService.User != null)
                        {
                        <a class="btn btn-primary" href='/addReview/@game.Id'>Add Review</a>
                            @if (gameUser != null && AuthenticationService.User.Id == gameUser.UserId)
                            {
                            <a class="btn btn-primary" href='/games/edit/@game.Id'>Edit</a>
                            <a class="btn btn-danger" @onclick="() => DeleteGame(game.Id)">Delete</a>
                            }
                            if(gameUser != null && AuthenticationService.User.Id == gameUser.UserId && gameUser.Role == GameUserRole.Owner)
                            {
                            <a class="btn btn-primary" href='/addGameUser/gameId/@game.Id'>Add Moderator</a>
                            }
                        }
                        
                </td>
                </tr>
            </ul>
        }
    </div>
</div>

@code {
    private bool loading;
    private Game game;
    private GameUser? gameUser;
    [Parameter]
    public string Id { get; set; }


    protected override async Task OnInitializedAsync()
    {
        loading = true;
        game = await GamesService.GetById(Convert.ToInt32(Id));
        gameUser = await GameUsersService.GetByGameId(Convert.ToInt32(Id), AuthenticationService.User.Id);
        loading = false;
    }
    [Authorize]
    protected async Task DeleteGame(int id)
    {
        await GamesService.Delete(id);
        NavigationManager.NavigateTo("/games");
    }
}