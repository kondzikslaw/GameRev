@page "/addReview/{Id}"
@attribute [Authorize]
@inject IReviewsService ReviewsService
@inject IUserService UserService
@inject IGamesService GamesService
@inject Microsoft.AspNetCore.Components.NavigationManager navigationManager
<h1>
    Add Review to @game.Title
</h1>

<div class="row">
    <div class="col-md-4">
        <form>
            <div class="form-group">
                <label for="Content" class="control-label">Content</label>
                <input for="Content" class="form-control" @bind-value="@review.Content" />

                <label for="Rate" class="control-label">Rate</label>
                <input for="Rate" class="form-control" @bind-value="@review.Rate" />

                <input type="hidden" @bind-value="@review.Id" />

                <input type="hidden" @bind-value="@review.AuthorId" />

                <input type="hidden" @bind-value="@review.PublishDate" />

                <input type="hidden" @bind-value="@review.GameId" />
            </div>
            <div class="form-group">
                <button type="button" class="btn btn-primary" @onclick="() => CreateArticle()">Save</button>
                <button type="button" class="btn btn-danger" @onclick="() => cancel()">Cancel</button>
            </div>
        </form>
    </div>
</div>

@code {
    Review review = new Review();
    [Parameter]
    public string Id { get; set; }

    private Game game = new Game();

    protected override async Task OnInitializedAsync()
    {
        game = await GamesService.GetById(Convert.ToInt32(Id));
    }

    protected async Task CreateArticle()
    {

        User me = await UserService.GetMe();
        review.PublishDate = DateTime.Now;
        review.AuthorId = me.Login;
        review.GameId = Convert.ToInt32(Id);
        await ReviewsService.Create(review);
        navigationManager.NavigateTo("/games");
    }

    void cancel()
    {
        navigationManager.NavigateTo("/games");
    }
}